knitr::opts_chunk$set(echo = TRUE)
if(!require(readr)){
install.packages("readr")
require(readr)
}
if(!require(dplyr)){
install.packages("dplyr")
require(dplyr)
}
if(!require(ggplot2)){
install.packages("ggplot2")
require(ggplot2)
}
if(!file.exists("data/pokemon.csv"))
download.file(url = "https://courses.datacrunch.sh/courses/intro-analyse-r/TD6/pokemon.csv", destfile = "data/pokemon.csv", mode = "wb")
pokemons <- read_csv("data/pokemon.csv")
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
knitr::opts_chunk$set(echo = TRUE)
if(!require(readr)){
install.packages("readr")
require(readr)
}
if(!require(dplyr)){
install.packages("dplyr")
require(dplyr)
}
if(!require(ggplot2)){
install.packages("ggplot2")
require(ggplot2)
}
if(!file.exists("data/pokemon.csv"))
download.file(url = "https://courses.datacrunch.sh/courses/intro-analyse-r/TD6/pokemon.csv", destfile = "data/pokemon.csv", mode = "wb")
pokemons <- read_csv("data/pokemon.csv")
nb_gen <- length(unique(pokemons$Generation))
nb_pokemons <- nrow(pokemons)
nb_leg <- nrow(pokemons[pokemons$Legendary == TRUE,])
picked <- "Persian"
pokemon <- pokemons[pokemons$Name == picked,]
pokemon <- pokemon[1,]
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, color = "red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, color = "red", fill = ref))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "red")) + ylab("Densité")
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "red")) + ylab("Densité") + xlab("Vitesse")
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, colour = "red")) + ylab("Densité") + xlab("Vitesse") + geom_text(aes())
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, colour = "red")) + ylab("Densité") + xlab("Vitesse")
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "red")) + ylab("Densité") + xlab("Vitesse") + ggtitle("Comparaison vitesse") + scale_color_manual(labels = c(picked), values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, colour = "red")) + ylab("Densité") + xlab("Vitesse") + ggtitle("Comparaison vitesse") + scale_color_manual(labels = c(picked), values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = picked)) + ylab("Densité") + xlab("Vitesse") + ggtitle("Comparaison vitesse") + scale_color_manual(labels = c(picked), values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = c(picked)) + ylab("Densité") + xlab("Vitesse") + ggtitle("Comparaison vitesse") + scale_color_manual(labels = c(picked), values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = c(picked))) + ylab("Densité") + xlab("Vitesse") + ggtitle("Comparaison vitesse") + scale_color_manual(labels = c(picked), values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = )) + ylab("Densité") + xlab("Vitesse") + ggtitle("") + scale_color_manual(labels = c(picked), values = c("red"))
+ labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian")
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = )) + scale_color_manual(labels = c(picked), values = c("red")) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian")
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed)) + scale_color_manual(labels = c(picked), values = c("red")) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian")
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed)) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = c(picked), values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed)) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Persian", values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed)) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité") + scale_color_manual(labels = "Persian", values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Persian", values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
#ggplot(data = same_gen_pokemons) + geom_histogram(binwidth = 5, aes(x = Speed, fill = ref))
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("red")) + geom_text(aes(label = pokemon$Speed))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian", label = pokemon$Speed)) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + geom_label() + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + geom_text(aes(x = pokemon$Speed, label = pokemon$Speed)) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + geom_text(aes(x = pokemon$Speed, label = pokemon$Speed, y = 0)) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + geom_label(aes(x = pokemon$Speed, label = pokemon$Speed, y = 0)) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("red"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + geom_label(aes(x = pokemon$Speed, label = pokemon$Speed, y = 0, angle = 90)) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("green"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + geom_label(aes(x = pokemon$Speed, label = pokemon$Speed, y = 0, fill = "red")) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("green"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + geom_label(aes(x = pokemon$Speed, label = pokemon$Speed, y = 0)) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("green"))
same_gen_pokemons <- pokemons[pokemons$Generation == pokemon$Generation,]
ref <- same_gen_pokemons$Speed == pokemon$Speed
ggplot(data = same_gen_pokemons) + geom_density(aes(x = Speed)) + geom_vline(aes(xintercept = pokemon$Speed, color = "Persian")) + geom_label(aes(x = pokemon$Speed, label = pokemon$Speed, y = 0)) + labs(title = "Comparaison vitesse", x = "Vitesse", y = "Densité", color = "Persian") + scale_color_manual(labels = "Vitesse", values = c("green"))
# Creating DF from CSV
pokemon <- read_csv('pokemon')
library(readr)
# Creating DF from CSV
pokemon <- read_csv('pokemon')
source('~/Téléchargements/sami.r')
source('~/Téléchargements/sami.r')
View(result.min)
View(result.max)
View(result.max)
mean.speed <- mean(pokemon$Speed)
mean.attack <- mean(pokemon$Attack)
# Libraries
library(fmsb)
library(readr)
library(tibble)
# Creating DF from CSV
pokemon <- read_csv('data/pokemon.csv')
# Creating dummy column to aggregate on
pokemon$dummy <- 1
mean.speed <- mean(pokemon$Speed)
mean.attack <- mean(pokemon$Attack)
# Creating minimum rows for lower shape of spider
result.min <- data.frame(list('min', 0,0,0,0,0,0))
# ASsigning column names
colnames(result.min)[1] <- 'Group.1'
colnames(result.min)[2:7] <- colnames(pokemon[,5:10])
colnames(result.min)
# Computing max values for column names
result.max <- aggregate(pokemon[, 5:10],list(pokemon$dummy), max)
result.max$Group.1 <- 'max'
# Computing mean for general comparison
result.mean <- aggregate(pokemon[, 5:10], list(pokemon$dummy), mean)
result.mean$Group.1 <- 'mean'
# Creating the row for the pokemon to compare
pokemon_first <- pokemon[3, 1:10]
pokemon_first$Group.1 = pokemon_first$Name
pokemon_first <- pokemon_first[, 5:11]
# Unioning all dataframes, with fmsb, first row should be MAX value, second row should be MIN and then normal values
result <- rbind( result.max, result.min, result.mean, pokemon_first)
# Deleting first column (might be used for the legend in the future?)
result$Group.1 <- NULL
# Radar chart color assignment
colors_border <- c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9), rgb(0.7,0.5,0.1,0.9))
colors_in <- c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4), rgb(0.7,0.5,0.1,0.4))
# Creating the chart
# https://www.rdocumentation.org/packages/fmsb/versions/0.7.0/topics/radarchart
radarchart(result,
axistype=1 ,
#customize the polygons
pcol=colors_border,
pfcol=colors_in,
plwd=4,
plty=1,
#customize the grid
cglcol="grey",
cglty=1,
axislabcol="grey",
cglwd=0.8,
#custom labels
vlcex=0.8)
# Add a legend
legend(x=0.7, y=1, legend=rownames(result[-c(1,2),]), bty="n", pch=20 , col=colors_in , text.col="grey", cex=1.2, pt.cex=3)
View(result)
source('~/Téléchargements/sami.r')
pokemon_first$Name
View(pokemon_first)
?filter
filter(pokemon, Speed == pokemon_first$Speed & Attack == pokemon_first$Attack)
filter(pokemon, Speed == pokemon_first$Speed & Attack == pokemon_first$Attack)
filter(pokemon, pokemon$Speed == pokemon_first$Speed & pokemon$Attack == pokemon_first$Attack)
source('~/Téléchargements/sami.r')
source('~/Téléchargements/sami.r')
source('~/Téléchargements/sami.r')
knit_with_parameters('~/Documents/universite/L3/S6/INFO0607/TP5/src.Rmd')
knit_with_parameters('~/Documents/universite/L3/S6/INFO0607/TP5/src.Rmd')
knit_with_parameters('~/Documents/universite/L3/S6/INFO0607/TP5/src.Rmd')
knit_with_parameters('~/Documents/universite/L3/S6/INFO0607/TP5/src.Rmd')
View(pokemon)
knit_with_parameters('~/Documents/universite/L3/S6/INFO0607/TP5/src.Rmd')
knitr::opts_chunk$set(echo = TRUE)
#Checking if library is well imported and install them if not
if(!require(readr)){
install.packages("readr")
require(readr)
}
if(!require(dplyr)){
install.packages("dplyr")
require(dplyr)
}
if(!require(ggplot2)){
install.packages("ggplot2")
require(ggplot2)
}
if(!require(fmsb)){
install.packages("fmsb")
require(fmsb)
}
#Checking if dataset exists and download it if not
if(!file.exists("data/pokemon.csv"))
download.file(url = "https://courses.datacrunch.sh/courses/intro-analyse-r/TD6/pokemon.csv", destfile = "data/pokemon.csv", mode = "wb")
pokemons <- read_csv("data/pokemon.csv")
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Preparing for agregating
pokemon$tmp <- 1
?aggregate
knitr::opts_chunk$set(echo = TRUE)
#Checking if library is well imported and install them if not
if(!require(readr)){
install.packages("readr")
require(readr)
}
if(!require(dplyr)){
install.packages("dplyr")
require(dplyr)
}
if(!require(ggplot2)){
install.packages("ggplot2")
require(ggplot2)
}
if(!require(fmsb)){
install.packages("fmsb")
require(fmsb)
}
#Checking if dataset exists and download it if not
if(!file.exists("data/pokemon.csv"))
download.file(url = "https://courses.datacrunch.sh/courses/intro-analyse-r/TD6/pokemon.csv", destfile = "data/pokemon.csv", mode = "wb")
pokemons <- read_csv("data/pokemon.csv")
#Computing number of generations, pokemons and legendary ones
nb_gen <- length(unique(pokemons$Generation))
nb_pokemons <- nrow(pokemons)
nb_leg <- nrow(pokemons[pokemons$Legendary == TRUE,])
picked <- params$pokemon
#Getting the pokemon we picked
pokemon <- filter(pokemons, Name == picked)
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Creating column to aggregate on
pokemons$tmp <- 1
result.min <- aggregate(pokemons, pokemons$tmp, min)
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Creating column to aggregate on
pokemons$tmp <- 1
result.min <- aggregate(pokemons, as.list(pokemons$tmp), min)
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Creating column to aggregate on
pokemons$tmp <- 1
result.min <- aggregate(pokemons, list(pokemons$tmp), min)
list(pokemons$tmp)
as.list(pokemons$tmp)
list(pokemons$tmp)
View(result.min)
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Creating column to aggregate on
pokemons$tmp <- 1
result.min <- aggregate(pokemons[5:10], list(pokemons$tmp), min)
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Creating column to aggregate on
pokemons$tmp <- 1
result.min <- aggregate(pokemons[,5:10], list(pokemons$tmp), min)
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Creating column to aggregate on
pokemons$tmp <- 1
result.min <- aggregate(pokemons[5:10], list(pokemons$tmp), min)
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Creating column to aggregate on
pokemons$tmp <- 1
result.min <- aggregate(pokemons[5:10], list(pokemons$tmp), min)
result.max <- aggregate(pokemons[5:10], list(pokemons$tmp), max)
result.mean <- aggregate(pokemons[5:10], list(pokemons$tmp), mean)
View(result.max)
View(result.mean)
typeof(result.min)
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Creating column to aggregate on
result.min <- c("oui", 4)
result.max <- aggregate(pokemons[5:10], list(pokemons$tmp), max)
result.mean <- aggregate(pokemons[5:10], list(pokemons$tmp), mean)
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Creating column to aggregate on
result.min <- c("Min", min(pokemons$HP), min(pokemons$Attack), min(pokemons$Defense), min(pokemons$`Sp. Atk`), min(pokemons$`Sp. Def`), min(pokemons$Speed))
result.max <- aggregate(pokemons[5:10], list(pokemons$tmp), max)
result.mean <- aggregate(pokemons[5:10], list(pokemons$tmp), mean)
#Getting pokemons of the same generation than the one we picked
same_gen_pokemons <- filter(pokemons, Generation == pokemon$Generation)
#Creating column to aggregate on
result.min <- list("Min", min(pokemons$HP), min(pokemons$Attack), min(pokemons$Defense), min(pokemons$`Sp. Atk`), min(pokemons$`Sp. Def`), min(pokemons$Speed))
result.max <- aggregate(pokemons[5:10], list(pokemons$tmp), max)
result.mean <- aggregate(pokemons[5:10], list(pokemons$tmp), mean)
View(result.min)
View(result.mean)
typeof(result.mean)
result.mean
